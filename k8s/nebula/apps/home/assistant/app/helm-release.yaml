---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app assistant
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    defaultPodOptions:
      priorityClassName: home-cluster-critical
      automountServiceAccountToken: false
      securityContext:
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_GID}
        fsGroup: ${APP_GID}
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 100
          - 1010
      annotations:
        k8s.v1.cni.cncf.io/networks: hass-iot-static
      nodeSelector:
        kubernetes.io/hostname: "w7"
      tolerations:
        - key: "cm4"
          operator: "Exists"
          effect: ""

    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2023.12.3
            env:
              TZ: "Europe/Helsinki"
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 48m
                memory: 512M
              limits:
                memory: 800M
          code:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.20.0
            env:
              TZ: "Europe/Helsinki"
            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --port
              - "8081"
              - "/config"

        initContainers:
          wait-for-pg:
            image:
             repository: quay.io/prometheus/busybox
             tag: latest
            imagePullPolicy: IfNotPresent
            command:
              [
                "sh",
                "-c",
                'until nc -vz postgres16-rw.databases.svc.cluster.local 5432; do echo "Waiting for postgres..."; sleep 3; done;',
              ]
          01-init-db:
            image:
             repository: ghcr.io/onedr0p/postgres-init
             tag: 15.5
            envFrom:
              - secretRef:
                  name: assistant-init


    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 8123
      code:
        type: ClusterIP
        controller: main
        ports:
          http:
            port: 8081

    ingress:
      main:
        enabled: true
        primary: true
        className: "external-nginx"
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          external-dns.alpha.kubernetes.io/target: "r.home.skym.fi"
          hajimari.io/icon: mdi:home-assistant

        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
      internal:
        enabled: true
        className: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
      internal-code:
        enabled: true
        className: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: &host-code "hass-code.skylab.fi"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: code
                  port: http
        tls:
          - hosts:
              - *host-code


    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        globalMounts:
          - path: /config

      backup:
        enabled: true
        type: nfs
        server: nas.skylab.fi
        path: /volume3/Backups/k8s/hass
        globalMounts:
          - path: /config/backups