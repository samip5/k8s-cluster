---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: immich
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      automountServiceAccountToken: false

    controllers:
      main:
        type: deployment
        replicas: 2
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: server

        containers:
          main:
            order: 2
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.88.2
            args: [ "start-server.sh" ]
            envFrom:
              - secretRef:
                  name: &secret "immich-secret"
              - configMapRef:
                  name: &cm "immich-configmap"
            resources:
              requests:
                cpu: 100m
                memory: 512M
              limits:
                memory: 1Gi
      redis:
        type: deployment
        containers:
          main:
            order: 1
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.2.3
            env:
              REDIS_REPLICATION_MODE: master
            envFrom:
              - secretRef:
                  name: immich-secret
            command: ["redis-server", "--requirepass", "$(REDIS_PASSWORD)"]

      ml:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.88.2
            envFrom:
              - secretRef:
                  name: *secret
              - configMapRef:
                  name: *cm
            resources:
              requests:
                memory: 2150M
              limits:
                memory: 8Gi

      micro:
        type: deployment
        replicas: 2
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.88.2
            args: [ "start-microservices.sh" ]
            envFrom:
              - secretRef:
                  name: *secret
              - configMapRef:
                  name: *cm
            resources:
              requests:
                memory: 512M
              limits:
                memory: 1056M
      typesense:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/typesense/typesense
              tag: 0.25.1
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8108
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false


    service:
      main:
        ports:
          http:
            port: 3001
      ml:
        controller: ml
        ports:
          http:
            port: 3003
      typesense:
        controller: typesense
        ports:
          http:
            port: 8108
      redis:
        controller: redis
        ports:
          http:
            port: 6379
    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
              set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
             set $client_ip $forwarded_client_ip;
            }
        hosts:
          - host: &host "photos.skylab.fi"
            paths:
                - path: /
                  pathType: Prefix
                  service:
                    name: main
                    port: 3001
        tls:
          - hosts:
              - *host
      int:
        enabled: true
        className: internal-nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
              set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
             set $client_ip $forwarded_client_ip;
            }
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: 3001
        tls:
          - hosts:
              - *host


    persistence:
      library:
        enabled: true
        existingClaim: immich-nfs
        globalMounts:
          - path: /usr/src/app/upload
      config:
        enabled: true
        existingClaim: immich-typesense
        advancedMounts:
          typesense:
            main:
              - path: /config




