---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.15.6
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
  values:
    toolbox:
      enabled: true
      image: quay.io/ceph/ceph:v19.2.0

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      [osd]
      osd_mclock_override_recovery_settings = true
      osd_max_backfills = 10
      osd_mclock_profile = high_recovery_ops
      osd_recovery_max_active = 10
      osd_recovery_sleep = 0.1
      osd_scrub_auto_repair = true
      
      

    monitoring:
      enabled: true

    cephClusterSpec:
       placement: {}
#      placement:
##        mgr:
##          nodeAffinity:
##            requiredDuringSchedulingIgnoredDuringExecution:
##              nodeSelectorTerms:
##                - matchExpressions:
##                    - key: node-role.kubernetes.io/control-plane
##                      operator: Exists
#
#        mon:
#          nodeAffinity:
#            requiredDuringSchedulingIgnoredDuringExecution:
#              nodeSelectorTerms:
#                - matchExpressions:
#                    - key: kubernetes.io/arch
#                      operator: In
#                      values:
#                        - amd64
      cephVersion:
        image: quay.io/ceph/ceph:v19.2.0
      # This is a terrible hack (THANKS Anthony! :D)
      # I need more resources.
      crashCollector:
        disable: true
      resources:
        crashcollector:
          limits:
            memory: "60m"
          requests:
            memory: "60m"
        osd:
          limits:
#            cpu: "2000m"
            memory: "4Gi"
          requests:
#            cpu: "500m"
            memory: "4Gi"
        mds:
          limits:
            memory: "2Gi"
          requests:
            memory: "2Gi"
        mgr:
          limits:
            memory: "2Gi"
          requests:
            memory: "2Gi"
      network:
        provider: host
        connections:
          # Requires kernel 5.11
          encryption:
            enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: false
        useAllDevices: false
        encryptedDevice: true
        config:
          osdsPerDevice: "1"
        nodes:
          - name: m1
            devices:
              - name: /dev/nvme0n1 # /dev/disk/by-id/nvme-Micron_7450_MTFDKBA960TFR_24434BD57125
          - name: w-amd-1
            devices:
              - name: /dev/disk/by-id/nvme-KINGSTON_SEDC1000BM8960G_50026B76860DDA63
#          - name: w-amd-3
#            devices:
#              - name: /dev/disk/by-id/nvme-SAMSUNG_MZ9LQ512HBLU-00BVL_S73XNX0T887767
          - name: w-amd-4
            devices:
              - name: /dev/disk/by-id/nvme-SAMSUNG_MZ9LQ512HBLU-00BVL_S73XNX0T887767
      mon:
        count: 2
        allowMultiplePerNode: false
      mgr:
        count: 2
        modules:
          - name: pg_autoscaler
            enabled: true
      priorityClassNames:
        mon: system-node-critical
        osd: system-node-critical
        mgr: system-cluster-critical
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
      - name: builtin-mgr
        spec:
          name: .mgr
          failureDomain: host
          replicated:
            size: 2
            requireSafeReplicaSize: false
          parameters:
            compression_mode: none
        storageClass:
          enabled: false
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 2
          dataPools:
            - failureDomain: host
              replicated:
                size: 2
              name: fast-data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                cpu: "1000m"
                memory: "1Gi"
              requests:
                cpu: "35m"
                memory: "512Mi"
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: true
          name: fast-ceph-filesystem
          pool: fast-data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
    cephObjectStores: []
    ingress:
      dashboard:
        ingressClassName: "internal-nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        host:
          name: "rook.skylab.fi"
          path: "/"
        tls:
          - secretName: rook-tls
            hosts:
              - "rook.skylab.fi"
