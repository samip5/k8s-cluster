---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  upgrade:
    remediation:
      strategy: uninstall
  values:
    defaultPodOptions:
      runtimeClassName: nvidia
      enableServiceLinks: false
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 44
          - 109
          - 100
      annotations:
        reloader.stakater.com/auto: "true"

    controllers:
      jellyfin:
        type: statefulset

        containers:
          app:
            image:
              repository: registry.skysolutions.fi/docker.io/jellyfin/jellyfin
              tag: 10.10.1
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 500000000
              # Decoding requires these packages on Ubuntu 22.04
              # libnvidia-decode-550-server libnvidia-encode-550-server
              # As well as the normal nvidia drivers, runtime AND toolkit (later of which is handled by the nvidia GPU operator)
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: all
            resources:
              requests:
                memory: 2Gi
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
                memory: 2Gi

    service:
      jellyfin:
        controller: jellyfin
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8096

    ingress:
      app:
        className: nginx
        hosts:
          - host: &host1 jelly.media.skylab.fi
            paths:
              - path: /
                service:
                  identifier: jellyfin
                  port: http
        tls:
          - hosts:
              - *host1
      external:
        className: nginx
        hosts:
          - host: &host2 jelly.dh.skylab.fi
            paths:
              - path: /
                service:
                  identifier: jellyfin
                  port: http
        tls:
          - hosts:
              - *host2

    persistence:
      config:
        existingClaim: "jellyfin-config-v1"
        advancedMounts:
          jellyfin:
            app:
              - path: /config
      library:
        type: hostPath
        hostPath: "/var/mnt/merged/"
        globalMounts:
          - path: /var/mnt/merged/

      transcode:
        type: emptyDir
        globalMounts:
          - path: /config/transcodes
