---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kyoo
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      meilisearch:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/getmeili/meilisearch
              tag: v1.12
            env:
              MEILI_ENV: production
              MEILI_MASTER_KEY:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: MEILI_MASTER_KEY
            probes:
              liveness: &searchprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &searchport 7700
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *searchprobes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 1Gi

      rabbitmq:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/rabbitmq
              tag: 4-alpine
            envFrom: &envFrom
              - secretRef:
                  name: kyoo-secret
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 300Mi

      back:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-migrations:
            envFrom:
              - secretRef:
                  name: kyoo-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: 4.7.1@sha256:f7e607f240714bd116699e614c1d4c6d6549aca211fe6ffb3d51ad7f070f52b2
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: 4.7.1@sha256:416e980f76a6a33609d79f738d8f0280c4337a0ca93fdcc54b5aba001bf2dc57
            env:
              TRANSCODER_URL: http://kyoo-transcoder:7666
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 1Gi
              limits:
                cpu: 4000m
                memory: 8Gi

      front:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: 4.7.1@sha256:d7f76c9c65d930b156aa1f828d8439a2bbb3e34e5d43c720b7a96bbb3e33c641
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 1Gi

      scanner:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: &scannerimage ghcr.io/zoriya/kyoo_scanner
              tag: &scannertag 4.7.0@sha256:38daf3226b3884a2fb91e597f4061556b897a54bb418cf0b0519c426bcdb66b1
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 1Gi

      matcher:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: *scannerimage
              tag: *scannertag
            args: ["matcher"]
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 400Mi

      autosync:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_autosync
              tag: 4.7.1@sha256:fbba58ddb1a60466c641b5d3673299a4bb0e60d90ed2162eca551d3fcbd62c4b
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 100Mi

      transcoder:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_transcoder
              tag: 4.7.0@sha256:6dc3d64f241bb83c698fd6457198f66071f672c778a0bce48c1a90e9e3bef73a
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
                memory: 8Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      back:
        controller: back
        ports:
          http:
            port: 5000
      front:
        controller: front
        ports:
          http:
            port: 8901
      rabbitmq:
        controller: rabbitmq
        ports:
          http:
            port: 5672
      meilisearch:
        controller: meilisearch
        ports:
          http:
            port: *searchport
      transcoder:
        controller: transcoder
        ports:
          http:
            port: 7666
    ingress:
      main:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite /api/(.*) /$1 break;
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host1 kyoo.media.skylab.fi
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: front
                  port: http
              - path: /api
                pathType: Prefix
                service:
                  identifier: back
                  port: http
        tls:
          - hosts:
              - *host1
    persistence:
      kyoo:
        existingClaim: *app
        advancedMounts:
          back:
            app:
              - path: /metadata
      search:
        existingClaim: kyoo-meilisearch
        advancedMounts:
          meilisearch:
            app:
              - path: /meili_data
      transcoder-metadata:
        existingClaim: kyoo-transcoder-metadata
        advancedMounts:
          transcoder:
            app:
              - path: /metadata
      cache:
        type: emptyDir
        advancedMounts:
          transcoder:
            app:
              - path: /cache
      media:
        type: hostPath
        hostPath: "/var/mnt/merged/"
        globalMounts:
          - path: /var/mnt/merged/
