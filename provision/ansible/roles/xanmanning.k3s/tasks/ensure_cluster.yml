---

- name: "Ensure cluster token is captured from {{ k3s_control_delegate }}"
  ansible.builtin.slurp:
    path: "{{ k3s_runtime_config['data-dir'] | default(k3s_data_dir) }}/server/token"
  register: k3s_slurped_cluster_token
  delegate_to: "{{ k3s_control_delegate }}"
  when:
    - k3s_control_token is not defined
    - not ansible_check_mode
  become: "{{ k3s_become }}"

- name: Ensure cluster token is formatted correctly for use in templates
  ansible.builtin.set_fact:
    k3s_control_token: "{{ k3s_slurped_cluster_token.content | b64decode }}"
  when: k3s_control_token is not defined and not ansible_check_mode

- name: Ensure dummy cluster token is defined for ansible_check_mode
  ansible.builtin.set_fact:
    k3s_control_token: "{{ k3s_control_delegate | to_uuid }}"
  check_mode: false
  when: k3s_control_token is not defined and ansible_check_mode

- name: Ensure the cluster token file location exists
  ansible.builtin.file:
    path: "{{ k3s_token_location | dirname }}"
    state: directory
    mode: 0755
  become: "{{ k3s_become }}"

- name: Ensure k3s cluster token file is present
  ansible.builtin.template:
    src: cluster-token.j2
    dest: "{{ k3s_token_location }}"
    mode: 0600
  become: "{{ k3s_become }}"
  notify:
    - restart k3s

- name: Ensure k3s service unit file is present
  ansible.builtin.template:
    src: k3s.service.j2
    dest: "{{ k3s_systemd_unit_dir }}/k3s.service"
    mode: 0644
  become: "{{ k3s_become }}"
  notify:
    - reload systemd
    - restart k3s

- name: Ensure k3s config file exists
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ k3s_config_file }}"
    mode: 0644
  notify:
    - reload systemd
    - restart k3s
  become: "{{ k3s_become }}"

- name: Ensure secondary controllers are started
  ansible.builtin.systemd:
    name: k3s
    state: started
    enabled: "{{ k3s_start_on_boot }}"
  register: ensure_secondary_controllers_started
  failed_when:
    - ensure_secondary_controllers_started is not succeeded
    - not ansible_check_mode
  until: ensure_secondary_controllers_started is succeeded
  retries: "{{ ansible_play_hosts | length }}"
  delay: 5
  when:
    - k3s_control_node
    - not k3s_primary_control_node
  become: "{{ k3s_become }}"

- import_tasks: post_checks_control_plane.yml
  when: not k3s_skip_validation

- name: Flush Handlers
  meta: flush_handlers

- import_tasks: post_checks_nodes.yml
  when: not k3s_skip_validation
