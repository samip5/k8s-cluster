apiVersion: v1
kind: Namespace
metadata:
  name: prefer-dual-stack
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prefer-dual-stack-webhook
  namespace: prefer-dual-stack
  labels:
    app: prefer-dual-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prefer-dual-stack
  template:
    metadata:
      labels:
        app: prefer-dual-stack
    spec:
      containers:
        - name: server
          args:
            - -tlscert=/etc/certs/cert
            - -tlskey=/etc/certs/key
          image: ghcr.io/tibordp/prefer-dual-stack-webhook:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: tls-certs
              mountPath: /etc/certs
              readOnly: true
      volumes:
        - name: tls-certs
          secret:
            secretName: prefer-dual-stack-admission
---
# Service must be created first, as otherwise the MutatingWebhookConfiguration
# will reject it.

apiVersion: v1
kind: Service
metadata:
  name: prefer-dual-stack-webhook
  namespace: prefer-dual-stack
spec:
  ipFamilyPolicy: PreferDualStack
  selector:
    app: prefer-dual-stack
  ports:
    - port: 443
      targetPort: 8443
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: prefer-dual-stack-admission
webhooks:
  - name: prefer-dual-stack.tibordp.github.io
    matchPolicy: Equivalent
    rules:
      - apiGroups:   [""]
        apiVersions: ["v1"]
        operations:  ["CREATE"]
        resources:   ["services"]
        scope:       "Namespaced"
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        namespace: prefer-dual-stack
        name: prefer-dual-stack-webhook
        path: /mutate/services

# Interesting part ends here, the rest is just so that the server certificates are
# automatically generated on apply.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prefer-dual-stack-admission
  namespace: prefer-dual-stack
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prefer-dual-stack-admission
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prefer-dual-stack-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prefer-dual-stack-admission
subjects:
  - kind: ServiceAccount
    name: prefer-dual-stack-admission
    namespace: prefer-dual-stack
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prefer-dual-stack-admission
  namespace: prefer-dual-stack
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prefer-dual-stack-admission
  namespace: prefer-dual-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prefer-dual-stack-admission
subjects:
  - kind: ServiceAccount
    name: prefer-dual-stack-admission
    namespace: prefer-dual-stack
---
apiVersion: batch/v1
kind: Job
metadata:
  name: prefer-dual-stack-admission-create
  namespace: prefer-dual-stack
spec:
  template:
    metadata:
      name: prefer-dual-stack-admission-create
    spec:
      containers:
        - name: create
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=prefer-dual-stack-webhook,prefer-dual-stack-webhook.$(POD_NAMESPACE).svc
            - --namespace=$(POD_NAMESPACE)
            - --secret-name=prefer-dual-stack-admission
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      restartPolicy: OnFailure
      serviceAccountName: prefer-dual-stack-admission
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
apiVersion: batch/v1
kind: Job
metadata:
  name: prefer-dual-stack-admission-patch
  namespace: prefer-dual-stack
spec:
  template:
    metadata:
      name: prefer-dual-stack-admission-patch
    spec:
      containers:
        - name: patch
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=prefer-dual-stack-admission
            - --namespace=$(POD_NAMESPACE)
            - --patch-validating=false
            - --secret-name=prefer-dual-stack-admission
            - --patch-failure-policy=Fail
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      restartPolicy: OnFailure
      serviceAccountName: prefer-dual-stack-admission
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000