---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: falco
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: falco
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: falco-security-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
    timeout: 5m
  rollback:
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    # image:
    #   registry: public.ecr.aws
    driver:
      enabled: true
      kind: ebpf
    collectors:
      containerd:
        enabled: true
        socket: /var/run/k3s/containerd/containerd.sock
      docker:
        enabled: false
      crio:
        enabled: false
    falcosidekick:
      enabled: true
      # image:
      #   registry: public.ecr.aws
      config:
        alertmanager:
          hostport: >
            http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
          endpoint: /api/v2/alerts
          minimumpriority: emergency
      webui:
        enabled: true
        # image:
        #   registry: public.ecr.aws
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
          hosts:
            - host: &host falco.skylab.fi
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host
        redis:
          storageClass: longhorn
          nodeSelector:
            kubernetes.io/arch: amd64

    # https://securityhub.dev/
    customRules:
      rules-admin-activities.yaml: |
        - rule: Detect su or sudo
          desc: detect sudo activities
          condition:
            spawned_process and proc.name in (sudo, su)
          output: >
            Detected sudo or su privilege escalation activity (user=%user.name command=%proc.cmdline)
          priority: WARNING
          tags: [process]
        - rule: Package Management Launched
          desc: detect package management launched
          condition: >
            spawned_process and user.name != "_apt" and package_mgmt_procs and not package_mgmt_ancestor_procs
          output: >
            Package management process launched in container (user=%user.name
            command=%proc.cmdline container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)
          priority: ERROR
          tags: [process]
      rules-ssh-connections.yaml: |-
        - rule: Inbound SSH Connection
          desc: Detect Inbound SSH Connection
          condition: >
            ((evt.type in (accept,listen) and evt.dir=<) or
              (evt.type in (recvfrom,recvmsg))) and ssh_port
          output: >
            Inbound SSH connection (user=%user.name client_ip=%fd.cip client_port=%fd.cport server_ip=%fd.sip)
          priority: WARNING
          tags: [network]
        - rule: Outbound SSH Connection
          desc: Detect Outbound SSH Connection
          condition: >
            ((evt.type = connect and evt.dir=<) or
              (evt.type in (sendto,sendmsg))) and ssh_port
          output: >
            Outbound SSH connection (user=%user.name server_ip=%fd.sip server_port=%fd.sport client_ip=%fd.cip)
          priority: WARNING
          tags: [network]
      rules-file-integrity.yaml: |-
        - rule: Detect New File
          desc: detect new file created
          condition: >
            evt.type = chmod or evt.type = fchmod
          output: >
            File below a known directory opened for writing (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2])
          priority: ERROR
          tags: [filesystem]
        - rule: Detect New Directory
          desc: detect new directory created
          condition: >
            mkdir
          output: >
            File below a known directory opened for writing (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2])
          priority: ERROR
          tags: [filesystem]
        - rule: Detect File Permission or Ownership Change
          desc: detect file permission/ownership change
          condition: >
            spawned_process and proc.name in (chmod, chown) and proc.args contains "/tmp/"
          output: >
            File below a known directory has permission or ownership change (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2])
          priority: WARNING
          tags: [filesystem]
        - rule: Detect Directory Change
          desc: detect directories change
          condition: >
            spawned_process and proc.name in (mkdir, rmdir, mvdir, mv)
          output: >
            Directory Change in Filesystem (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2])
          priority: WARNING
          tags: [filesystem]
        - rule: Kernel Module Modification
          desc: detect kernel module change
          condition: >
            spawned_process and proc.name in (insmod, modprobe)
          output: >
            Kernel Module Change (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] result=%evt.res)
          priority: WARNING
          tags: [process]
        - rule: Node Created in Filesystem
          desc: detect node created in filesystem
          condition: >
            spawned_process and proc.name = mknod
          output: >
            Node Creation in Filesystem (user=%user.name
            command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] result=%evt.res)
          priority: WARNING
          tags: [filesystem]
        - rule: Listen on New Port
          desc: Detection a new port is listening
          condition:
            evt.type = listen
          output: >
            A new port is open to listen (port=%fd.sport ip=%fd.sip)
          priority: WARNING
          tags: [network]