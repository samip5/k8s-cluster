---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2022.11.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    outposts:
      docker_image_base: ghcr.io/goauthentik/%(type)s
    fullnameOverride: authentik
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.12.2
      pullPolicy: Always

    authentik:
      log_level: info
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      error_reporting:
        enabled: true
        environment: "kryptonian"
        sentry_dsn: "https://46f0bfcc74854b0592f6e60dd3e49121@sentry.skylab.fi/2"
      postgresql:
        host: "192.168.2.2"
        name: "authentik"
        user: "authentik"
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        host: "redis.databases.svc.cluster.local"
      email:
        host: "mailer.skylab.fi"
        port: 587
        use_tls: true
        username: "samipsolutions/authentik"
        password: "${SECRET_AUHENTIK_POSTAL_PASSWORD}"
        from: "no-reply@skylab.fi"

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        external-dns.home.arpa/enabled: "true"
        external-dns.target/enabled: "true"
#        traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
      hosts:
      - host: "id.skylab.fi"
        paths:
        - path: "/"
          pathType: Prefix
      tls:
      - hosts:
        - "id.skylab.fi"
        secretName: skylab.fi-tls
    postgresql:
      enabled: false
    redis:
      enabled: false

    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
