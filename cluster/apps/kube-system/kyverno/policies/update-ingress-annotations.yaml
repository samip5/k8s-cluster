---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: update-ingress-annotations
  annotations:
    policies.kyverno.io/title: Update ingress annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses, external-dns,
      and sets an explicit RFC1918 whitelist for any ingresses
      that are not not exposed to the internet.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: auth-dev
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                auth-dev.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): http://[2001:67c:1be8::56]:40118/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): https://sso.${DEV_DOMAIN}?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): Remote-User,Remote-Groups
              +(nginx.ingress.kubernetes.io/auth-snippet): proxy_set_header X-Forwarded-Method $request_method;

    - name: auth-fi
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                auth-fi.home.arpa/enabled: "true"

      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): http://[2001:67c:1be8::56]:40119/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): https://sso.${MAIN_DOMAIN}?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): Remote-User,Remote-Groups
              +(nginx.ingress.kubernetes.io/auth-snippet): proxy_set_header X-Forwarded-Method $request_method;

    - name: auth-basic-fi
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                auth-basic-fi.home.arpa/enabled: "true"

      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): http://[2001:67c:1be8::56]:40119/api/verify?auth=basic
              +(nginx.ingress.kubernetes.io/auth-response-headers): Remote-User,Remote-Groups
              +(nginx.ingress.kubernetes.io/auth-snippet): proxy_set_header X-Forwarded-Method $request_method;

    - name: external-dns
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                external-dns.target/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(external-dns.alpha.kubernetes.io/target): r.home.${MAIN_DOMAIN}

    - name: whitelist-source-range
      match:
        any:
          - resources:
              kinds:
                - Ingress
      exclude:
        any:
          - resources:
              annotations:
                external-dns.home.arpa/enabled: "true"
          - resources:
              annotations:
                external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          - resources:
              annotations:
                auth-basic-fi.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/whitelist-source-range): "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,2001:14ba:16d6:a6aa::/64,2001:67c:1104::/48,2001:67c:1be8::/48"
