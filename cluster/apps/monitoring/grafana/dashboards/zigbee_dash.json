{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "columns": [],
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "100%",
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 8,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "$$hashKey": "object:93",
          "alias": "",
          "align": "",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "/paristo$/",
          "preserveFormat": false,
          "sanitize": false,
          "thresholds": [
            "1",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "$$hashKey": "object:122",
              "text": "OK",
              "value": "1"
            },
            {
              "$$hashKey": "object:454",
              "text": "LOPUSSA",
              "value": "0"
            }
          ]
        },
        {
          "$$hashKey": "object:482",
          "alias": "Valvonta",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "#FADE2A",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "pk",
          "thresholds": [
            "0",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "$$hashKey": "object:580",
              "text": "Pois päältä",
              "value": "0"
            },
            {
              "$$hashKey": "object:582",
              "text": "Käynnissä",
              "value": "1"
            }
          ]
        },
        {
          "$$hashKey": "object:869",
          "alias": "Jännite",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 2,
          "pattern": "voltage",
          "preserveFormat": false,
          "rangeMaps": [
            {
              "$$hashKey": "object:2303",
              "from": "14.5",
              "text": "Verkkosähkö",
              "to": "100"
            }
          ],
          "thresholds": [
            "12",
            "14.5"
          ],
          "type": "string",
          "unit": "volt",
          "valueMaps": [
            {
              "$$hashKey": "object:1991",
              "text": "Sähköverkossa",
              "value": "100"
            }
          ]
        },
        {
          "$$hashKey": "object:2589",
          "alias": "Internet",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "internet_ok",
          "thresholds": [
            "1",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "$$hashKey": "object:2610",
              "text": "POIKKI",
              "value": "0"
            },
            {
              "$$hashKey": "object:2630",
              "text": "OK",
              "value": "1"
            }
          ]
        }
      ],
      "targets": [
        {
          "alias": "",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(select battery_ok_in from ahma where battery_ok_in is not null order by ts desc limit 1) as \"Sisäanturin paristo\",\n(select battery_ok_basement from ahma where battery_ok_basement is not null order by ts desc limit 1) as \"Kellarianturin paristo\",\n(select battery_ok_out from ahma where battery_ok_out is not null order by ts desc limit 1) as \"Ulkoanturin paristo\",\n(select internet_ok from ahma where internet_ok is not null order by ts desc limit 1),\n(select voltage from ahma where ac is not null order by ts desc limit 1),\n(select pk from ahma where battery_ok_basement is not null order by ts desc limit 1)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Tilatiedot",
      "transform": "table",
      "type": "table-old",
      "datasource": null
    }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P7D7E27EDDA4DFA74"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 3,
        "y": 8
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesHumidity = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"%\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"outdoor_shade_humidity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeriesHumidity = RawSeriesHumidity\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Humidity in shade (%)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesHumidity |> yield()",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesShadeTemperature = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"°C\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"outdoor_shade_temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n\nNamedSeriesShadeTemperature = RawSeriesShadeTemperature\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Temperature in shade (°C)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesShadeTemperature |> yield()",
          "refId": "D"
        }
      ],
      "title": "Outside Weather (Shade)",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P7D7E27EDDA4DFA74"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 11,
        "y": 8
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeries = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"°C\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"outdoor_sensor_temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeries = RawSeries\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Temperature (°C)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeries |> yield()",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesHumidity = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"%\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"outdoor_sensor_humidity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeriesHumidity = RawSeriesHumidity\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Humidity (%)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesHumidity |> yield()",
          "refId": "D"
        }
      ],
      "title": "Outside Weather",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P7D7E27EDDA4DFA74"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 9,
        "x": 3,
        "y": 17
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeries = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"°C\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"bathroom_sensor_temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeries = RawSeries\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Temperature in Bathroom (°C)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeries |> yield()",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeries = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"°C\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"bedroom_sensor_temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeries = RawSeries\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Temperature in Bedroom (°C)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeries |> yield()",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeries = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"°C\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"living_room_temperature\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeries = RawSeries\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Temperature in LivingRoom (°C)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeries |> yield()",
          "refId": "B"
        }
      ],
      "title": "Temperature inside Apartment",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P7D7E27EDDA4DFA74"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 12,
        "y": 17
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesHumidity = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"%\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"living_room_humidity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeriesHumidity = RawSeriesHumidity\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Humidity in Living Room (%)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesHumidity |> yield()",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesHumidity = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"%\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"bedroom_sensor_humidity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeriesHumidity = RawSeriesHumidity\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Humidity in Bathroom (%)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesHumidity |> yield()",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P7D7E27EDDA4DFA74"
          },
          "hide": false,
          "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\n\nRawSeriesHumidity = from(bucket: \"home_assistant\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"%\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"domain\"] == \"sensor\")\n  |> filter(fn: (r) => r[\"entity_id\"] == \"bathroom_sensor_humidity\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n      \nNamedSeriesHumidity = RawSeriesHumidity\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Humidity in Bedroom (%)\"}))\n  |> keep(columns:FinalOutput)\n\nNamedSeriesHumidity |> yield()",
          "refId": "C"
        }
      ],
      "title": "Humidity inside Apartment",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 33,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Zigbee Dashboard",
  "uid": "-rwms5fGz",
  "version": 1,
  "weekStart": ""
}
